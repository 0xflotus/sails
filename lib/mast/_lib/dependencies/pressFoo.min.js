(function(){
	
	// Map a few pressFoo events automatically
	pressFoo(27,'pressEscape');
	pressFoo(13,'pressEnter');
	
	
	// Enable public access to this method for registering more events later
	$.pressFoo = pressFoo;
	
	// Map a custom keypress event
	function pressFoo(keyCode,handlerName) {
		var pressEvent = function (target,keyCode,handlerName) {
			return function(e) {
				var pressedkeycode = e.keyCode || e.which;
				if(pressedkeycode == keyCode)
				{
					e.preventDefault();
					target.triggerHandler( handlerName );
				}
			}
		}
		
		$.event.special[handlerName] = {
		
			// This method gets called the first time this event
			// is bound to THIS particular element. It will be
			// called once and ONLY once for EACH element.
			setup: function( eventData, namespaces ){
				var target = $(this);

				// Bind the three event handlers that we are going
				// to need to make sure this event fires correctly.
				target
				.bind( "keyup", pressEvent(target,keyCode,handlerName));

				// Return void as we don't want jQuery to use the
				// native event binding on this element.
				return;
			},

			// This method gets called when this event us unbound
			// from THIS particular element.
			teardown: function( namespaces ){


				var target = $(this);

				// Bind the three event handlers that we are going
				// to need to make sure this event fires correctly.
				target
				.unbind( "keyup", pressEvent);

				// Return void as we don't want jQuery to use the
				// native event binding on this element.
				return;
			}
		}
	}

})();